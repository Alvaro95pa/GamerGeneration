{"version":3,"file":"list-users.component.js","sourceRoot":"","sources":["list-users.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA0CA;gBAeE,mBAAqB,MAAc,EAAS,cAA6B,EAAS,cAA8B,EAAU,YAA8B,EAAS,aAA4B,EAAS,YAAyB;oBAA1M,WAAM,GAAN,MAAM,CAAQ;oBAAS,mBAAc,GAAd,cAAc,CAAe;oBAAS,mBAAc,GAAd,cAAc,CAAgB;oBAAU,iBAAY,GAAZ,YAAY,CAAkB;oBAAS,kBAAa,GAAb,aAAa,CAAe;oBAAS,iBAAY,GAAZ,YAAY,CAAa;oBAX/N,YAAO,GAAS,KAAK,CAAC;gBAW2M,CAAC;gBATlO,4BAAQ,GAAR,UAAS,IAAY;oBACnB,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;gBACzB,CAAC;gBACD,gCAAY,GAAZ,UAAa,IAAY;oBAAzB,iBAKC;oBAJC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,EAAE;wBAChD,KAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC,CAAC,CAAC;gBAEL,CAAC;gBAED,+BAAW,GAAX;oBAAA,iBAKC;oBAJC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;wBAC/C,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAC,IAAI,CAAC;oBACpB,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,6BAAS,GAAT;oBACE,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC7C,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;gBACpB,CAAC;gBACD,4BAAQ,GAAR;oBACE,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC;gBAED,mCAAe,GAAf;oBACE,IAAI,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC;gBACD,uCAAmB,GAAnB,UAAoB,GAAU;oBAC5B,IAAI,IAAI,GAAG,CAAC,gBAAgB,EAAC,EAAC,IAAI,EAAC,GAAG,EAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC;gBACD,uCAAmB,GAAnB;oBACE,IAAI,IAAI,GAAG,CAAC,gBAAgB,CAAC,CAAC;oBAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC;gBACD,mCAAe,GAAf;oBACE,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CACtC,UAAA,QAAQ,IAAK,CAAC,EACd,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAC,KAAK,CAAC,EAAnD,CAAmD,CAC5D,CAAC;oBACD,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC;gBAnFH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAC,WAAW;wBACpB,QAAQ,EAAE,6gDA4BT;qBACF,CAAC;;6BAAA;gBAqDF,gBAAC;YAAD,CAAC,AAnDD,IAmDC;YAnDD,iCAmDC,CAAA;;;;AACD;;EAEE","sourcesContent":["import {Component,Input,OnInit} from 'angular2/core';\nimport { Usuario } from './usuario.model'\nimport {clasesservice} from './clases.service'\nimport {modoadminservice} from './modoadmin.service';\nimport {UsuarioService} from './usuario.service';\nimport { Router } from 'angular2/router';\nimport { RouteParams } from 'angular2/router';\nimport {SesionService} from './sesion.service';\n\n@Component({\n  selector:'listusers',\n  template: `\n\n    <div class=\"row admin fondo\">\n      <ul class=\"nav nav-pills nav-stacked col-sm-3 contorno\">\n        <li  [class.selected]=\"tipoopcion==1\" (click)=\"gotoadmin_users('Users')\"><a >Usuarios</a></li>\n        <li  [class.selected]=\"tipoopcion==2\" (click)=\"gotoadmin_contenido('Noticia')\"><a >Noticias</a></li>\n        <li  [class.selected]=\"tipoopcion==3\" (click)=\"gotoadmin_contenido('Análisis')\"><a >Analisis</a></li>\n        <li  [class.selected]=\"tipoopcion==4\" (click)=\"gotoadmin_productos()\"><a >Productos</a></li>\n        <li  (click)=\"gotoadmin_salir()\"><a >Salir</a></li>\n      </ul>\n      <div>\n        <div class=\"admin_info infor_user col-sm-9 col-xs-12\" *ngFor=\"#user of list_usuarios\" (click)=\"onselect(user)\">\n          <div *ngIf=\"visible\" class=\"col-sm-2 col-xs-2\">\n            <img  src={{user.imagen.url}}>\n          </div>\n          <div class=\"col-sm-6 col-xs-6\">\n            <h3 class=\"col-sm-12\">{{user.usuario}}</h3>\n            <div *ngIf=\"user === selectedUser\">\n              <p class=\"col-sm-12\">Nombre: {{user.nombre}}</p>\n              <p class=\"col-sm-12\">Cumpleaños: {{user.cumpleanos}}</p>\n              <p class=\"col-sm-12\">Correo: {{user.correo}}</p>\n            </div>\n          </div>\n          <button *ngIf=\"user === selectedUser\" class=\"btn col-sm-4 col-xs-4\"  >Editar</button>\n          <button (click)=\"eliminarUser(user)\" class=\"btn col-sm-4 col-xs-4\"  >Eliminar</button>\n        </div>\n      </div>\n    </div>\n  `\n})\n\nexport class listusers implements OnInit{\n  tipoopcion:number;\n  list_usuarios:Usuario[];\n  selectedUser:Usuario;\n  visible:boolean=false;\n\n  onselect(user:Usuario){\n    this.selectedUser=user;\n  }\n  eliminarUser(user:Usuario){\n    this.adminservice.deleteUser(user.id).subscribe(id =>{\n      this.getusuarios();\n    });\n\n  }\n  constructor (private router: Router,private _sesionService: SesionService,private UsuarioService: UsuarioService, private adminservice: modoadminservice,private clasesservice: clasesservice,private _routeParams: RouteParams){}\n  getusuarios(){\n    this.UsuarioService.getUsuarios().subscribe(users => {\n      this.list_usuarios = users;\n      this.visible=true;\n    });\n  }\n  getopcion(){\n    let opcion = this._routeParams.get('opcion');\n    this.tipoopcion=1;\n  }\n  ngOnInit(){\n    this.getopcion();\n    this.getusuarios();\n  }\n\n  gotoadmin_users(){\n    let link = ['AdminUsers'];\n    this.router.navigate(link);\n  }\n  gotoadmin_contenido(opc:string){\n    let link = ['AdminContenido',{tipo:opc}];\n    this.router.navigate(link);\n  }\n  gotoadmin_productos(){\n    let link = ['AdminProductos'];\n    this.router.navigate(link);\n  }\n  gotoadmin_salir(){\n    this._sesionService.logOut().subscribe(\n  \t\tresponse => {},\n  \t\terror => console.log(\"Error when trying to log out: \"+error)\n  \t);\n    let link = ['Home'];\n    this.router.navigate(link);\n  }\n}\n/*\n\n*/\n"]}