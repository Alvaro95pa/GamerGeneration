{"version":3,"file":"usuario.service.js","sourceRoot":"","sources":["usuario.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from 'angular2/core';\r\nimport { Usuario } from './usuario.model'\r\nimport { Prod } from './clases';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Headers, RequestOptions } from 'angular2/http';\r\nimport 'rxjs/Rx';\r\n\r\nconst BASE_URL = 'https://127.0.0.1:8443/usuarios/';\r\n\r\n@Injectable()\r\nexport class UsuarioService {\r\n  //Constructor\r\n  constructor(private http: Http) { }\r\n  //Metodos\r\n  //Obtener todos los usuarios\r\n  getUsuarios() {\r\n    return this.http.get(BASE_URL)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Obtener un usuario\r\n  getUsuario(id: number) {\r\n    return this.http.get(BASE_URL + id)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Cambiar los datos personales del usuario\r\n  setPersonales(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Cambiar la privacidad de un usuario\r\n  setPrivacidad(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //A単adir usuario\r\n  addUsuario(usuario: Usuario){\r\n    let a単adido = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.post(BASE_URL, a単adido, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Eliminar usuario\r\n  removeUsuario(usuario: Usuario){\r\n    return this.http.delete(BASE_URL + usuario.id)\r\n    .map(\r\n      response => undefined\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //A単adir amigo al usuario\r\n  addAmigo(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Borrar amigo del usuario\r\n  remAmigo(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Cambiar favorito del usuario\r\n  setFavorito(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Borrar favoritos\r\n  removeFav(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //A単adir contenido al usuario\r\n  addContenido(producto: Prod, usuario: Usuario){\r\n    usuario.coleccion.push(producto);\r\n    if(producto.tipoprod == 3){\r\n      usuario.nPelis = usuario.nPelis + 1;\r\n    }\r\n    if(producto.tipoprod == 2){\r\n      usuario.nSeries = usuario.nSeries + 1;\r\n    }\r\n    if(producto.tipoprod == 1){\r\n      usuario.nJuegos = usuario.nJuegos + 1;\r\n    }\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //Eliminar contenido del usuario\r\n  removeContenido(usuario: Usuario){\r\n    let cambio = JSON.stringify(usuario);\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL + usuario.id, cambio, options)\r\n    .map(\r\n      response => response.json()\r\n    )\r\n    .catch(\r\n      error => this.handleError(error)\r\n    );\r\n  }\r\n  //handleError\r\n  private handleError(error: any){\r\n    console.error(error);\r\n    return Observable.throw(\"Server error (\" + error.status + \"): \" + error.text())\r\n  }\r\n}\r\n"]}