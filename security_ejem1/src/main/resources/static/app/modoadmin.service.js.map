{"version":3,"file":"modoadmin.service.js","sourceRoot":"","sources":["modoadmin.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from 'angular2/core';\r\n\r\nimport {Prod,infodetalle,comentario,usuario} from './clases';\r\nimport { Usuario } from './usuario.model'\r\nimport {Contenido} from './contenido.model';\r\nimport {prod_list,infolista,comentarios_list,usuarios_list} from './mock';\r\nimport {Http, Headers, RequestOptions} from 'angular2/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/Rx';\r\n\r\nconst prod_URL = 'http://localhost:8443/productos';\r\nconst comentarios_URL = 'http://localhost:8443/comentarios';\r\nconst content_URL = 'http://localhost:8443/contenido';\r\nconst users_URL = 'http://localhost:8443/users';\r\n\r\n@Injectable()\r\nexport class modoadminservice {\r\n  constructor(private http: Http) {}\r\n\r\n  getProductos (){\r\n    return this.http.get(prod_URL + '/all')\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n  getProductosFiltro(juego:number,series:number,pelis:number){\r\n    return this.http.get(prod_URL + '/filtro/' + \"/\" + juego  + \"/\" + series  + \"/\" + pelis)\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n  getProd (id:number){\r\n    return this.http.get(prod_URL + '/' + id)\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n\r\n  deleteProd(id:number){\r\n    return this.http.delete(prod_URL + '/' + id)\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n  pushProd(produc:Prod){\r\n    let body = JSON.stringify(produc);\r\n    let headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({ headers });\r\n    return this.http.post(prod_URL + '/nuevoproducto',body,options)\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n  deleteContenido(id:number){\r\n    return this.http.delete(prod_URL + '/' + id)\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n  pushContenido(content:Contenido){\r\n    let body = JSON.stringify(content);\r\n    let headers = new Headers({\r\n        'Content-Type': 'application/json',\r\n        'X-Requested-With': 'XMLHttpRequest'\r\n    });\r\n    let options = new RequestOptions({ headers });\r\n    return this.http.post(content_URL + '/',body,options)\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n  getContenido(){\r\n    return this.http.get(content_URL + '/')\r\n      .map(resp => resp.json())\r\n      .catch(err => this.mostrarError(err));\r\n  }\r\n\r\n  getusuarios(){\r\n    return Promise.resolve (usuarios_list);\r\n  }\r\n\r\n  deleteUser(user:Usuario){\r\n    /*\r\n    let position = USUARIOS.indexOf(user);\r\n    USUARIOS.splice(position,1);\r\n    console.log(position);\r\n    */\r\n  }\r\n\r\n  private mostrarError(error: any){\r\n    console.error(error);\r\n    return Observable.throw(\"Server error (\" + error.status + \"): \" + error.text())\r\n  }\r\n}\r\n"]}