{"version":3,"file":"amigos.component.js","sourceRoot":"","sources":["amigos.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAeA;gBAKE,SAAS;gBACT,yBAAoB,eAA+B,EAAW,OAAe,EAAU,YAAyB,EAAU,cAA6B;oBAAnI,oBAAe,GAAf,eAAe,CAAgB;oBAAW,YAAO,GAAP,OAAO,CAAQ;oBAAU,iBAAY,GAAZ,YAAY,CAAa;oBAAU,mBAAc,GAAd,cAAc,CAAe;oBAFvJ,YAAO,GAAY,KAAK,CAAC;gBAEiI,CAAC;gBAC3J,kCAAQ,GAAR;oBAAA,iBASC;oBARC,IAAI,EAAE,GAAE,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACrC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,OAAO;wBACnD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;wBACvB,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,IAAI,CAClC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,EAA5B,CAA4B,CACvC,CAAC;wBACF,KAAI,CAAC,OAAO,GAAG,IAAI,CAAA;oBACrB,CAAC,CAAC,CAAA;gBACJ,CAAC;gBACD,oCAAU,GAAV,UAAW,KAAc;oBACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACtD,CAAC;gBA1BH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,2BAA2B;wBACxC,UAAU,EAAE,CAAC,8BAAa,CAAC;wBAC3B,SAAS,EAAE,CAAC,gCAAc,EAAE,8BAAa,CAAC;qBAC3C,CAAC;;mCAAA;gBAsBF,sBAAC;YAAD,CAAC,AApBD,IAoBC;YApBD,6CAoBC,CAAA","sourcesContent":["import { Component } from 'angular2/core';\r\nimport { MenuComponent } from './menu.component';\r\nimport { UsuarioService } from './usuario.service';\r\nimport { OnInit } from 'angular2/core';\r\nimport { Usuario } from './usuario.model';\r\nimport { Router, RouteParams } from 'angular2/router';\r\nimport { SesionService } from './sesion.service';\r\n\r\n@Component({\r\n  selector: 'amigos-component',\r\n  templateUrl: 'app/amigos.component.html',\r\n  directives: [MenuComponent],\r\n  providers: [UsuarioService, SesionService]\r\n})\r\n\r\nexport class AmigosComponent implements OnInit {\r\n  //Variables\r\n  usuario: Usuario;\r\n  actual: string;\r\n  visible: boolean = false;\r\n  //Metodos\r\n  constructor(private _usuarioService: UsuarioService,  private _router: Router, private _routeParams: RouteParams, private _sesionService: SesionService) {}\r\n  ngOnInit() {\r\n    let id= +this._routeParams.get('id');\r\n    this._usuarioService.getUsuario(id).subscribe(usuario =>{\r\n      this.usuario = usuario;\r\n      this._sesionService.getSesion().then(\r\n        actual => this.actual = actual.usuario\r\n      );\r\n      this.visible = true\r\n    })\r\n  }\r\n  irConcreto(amigo: Usuario){\r\n    this._router.navigate(['Cuenta', { id: amigo.id }]);\r\n  }\r\n}\r\n"]}