{"version":3,"file":"contenido.service.js","sourceRoot":"","sources":["contenido.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Contenido} from './contenido.model';\r\nimport { Injectable } from 'angular2/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http, Headers, RequestOptions } from 'angular2/http';\r\nimport 'rxjs/Rx';\r\n\r\nconst BASE_URL = 'https://localhost:8443/contenido/';\r\n\r\n@Injectable()\r\nexport class ContenidoService {\r\n\r\n  constructor(private http: Http){}\r\n\r\n  getContenido() {\r\n    return this.http.get(BASE_URL)\r\n    .map(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n  }\r\n\r\n  getContenidoId(id: number) {\r\n    return this.http.get(BASE_URL +id)\r\n   .map(response => response.json())\r\n   .catch(error => this.handleError(error));\r\n  }\r\n\r\n  getContenidoTipo(tipo:string){\r\n    return this.http.get(BASE_URL + tipo)\r\n   .map(response => response.json())\r\n   .catch(error => this.handleError(error));\r\n  }\r\n\r\n  //Subida de contenido\r\n  addContenido(contenido: Contenido){\r\n    let a単adido = JSON.stringify(contenido);\r\n    let headers = new Headers({\r\n        'Content-Type': 'application/json'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.post(BASE_URL, a単adido, options)\r\n    .map(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n  }\r\n\r\n  actualizarContenido(contenido: Contenido){\r\n    let a単adido = JSON.stringify(contenido);\r\n    let headers = new Headers({\r\n        'Content-Type': 'application/json'\r\n    });\r\n    let options = new RequestOptions({headers});\r\n    return this.http.put(BASE_URL+\"/\"+contenido.id, a単adido, options)\r\n    .map(response => response.json())\r\n    .catch(error => this.handleError(error));\r\n  }\r\n\r\n  //Borrado de contenido\r\n  removeContenido(contenido: Contenido){\r\n    return this.http.delete(BASE_URL + contenido.id)\r\n    .map(response => undefined)\r\n    .catch(error => this.handleError(error));\r\n  }\r\n\r\n  //handleError\r\n  private handleError(error: any){\r\n    console.error(error);\r\n    return Observable.throw(\"Server error (\" + error.status + \"): \" + error.text());\r\n  }\r\n}\r\n"]}