{"version":3,"file":"calendario.component.js","sourceRoot":"","sources":["calendario.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component} from 'angular2/core';\r\nimport {DATEPICKER_DIRECTIVES} from 'ng2-bootstrap/ng2-bootstrap';\r\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from 'angular2/common';\r\n\r\n\r\n@Component({\r\n  selector: 'calendario',\r\n  templateUrl: 'app/calendario.component.html',\r\n  directives: [DATEPICKER_DIRECTIVES, CORE_DIRECTIVES, FORM_DIRECTIVES]\r\n})\r\nexport class Calendario {\r\n  public dt:Date = new Date();\r\n  public minDate:Date = void 0;\r\n  public events:Array<any>;\r\n  public tomorrow:Date;\r\n  public afterTomorrow:Date;\r\n  public formats:Array<string> = ['DD-MM-YYYY', 'YYYY/MM/DD', 'DD.MM.YYYY', 'shortDate'];\r\n  public format:string = this.formats[0];\r\n  public dateOptions:any = {\r\n    formatYear: 'YY',\r\n    startingDay: 1\r\n  };\r\n  private opened:boolean = false;\r\n\r\n  public constructor() {\r\n    (this.tomorrow = new Date()).setDate(this.tomorrow.getDate() + 1);\r\n    (this.afterTomorrow = new Date()).setDate(this.tomorrow.getDate() + 2);\r\n    (this.minDate = new Date()).setDate(this.minDate.getDate() - 1000);\r\n    this.events = [\r\n      {date: this.tomorrow, status: 'full'},\r\n      {date: this.afterTomorrow, status: 'partially'}\r\n    ];\r\n  }\r\n  public getDate():number {\r\n    return this.dt && this.dt.getTime() || new Date().getTime();\r\n  }\r\n  public today():void {\r\n    this.dt = new Date();\r\n  }\r\n\r\n  // todo: implement custom class cases\r\n  public getDayClass(date:any, mode:string):string {\r\n    if (mode === 'day') {\r\n      let dayToCheck = new Date(date).setHours(0, 0, 0, 0);\r\n\r\n      for (let i = 0; i < this.events.length; i++) {\r\n        let currentDay = new Date(this.events[i].date).setHours(0, 0, 0, 0);\r\n\r\n        if (dayToCheck === currentDay) {\r\n          return this.events[i].status;\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  public disabled(date:Date, mode:string):boolean {\r\n    return ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 6 ) );\r\n  }\r\n\r\n  public open():void {\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  public clear():void {\r\n    this.dt = void 0;\r\n  }\r\n\r\n  public toggleMin():void {\r\n    this.dt = new Date(this.minDate.valueOf());\r\n  }\r\n}\r\n"]}