{"version":3,"file":"noticia-detail.component.js","sourceRoot":"","sources":["noticia-detail.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAiBA;gBAYE,wBAAoB,cAA6B,EAAS,eAAiC,EAAU,cAA6B,EACxH,YAAyB;oBADf,mBAAc,GAAd,cAAc,CAAe;oBAAS,oBAAe,GAAf,eAAe,CAAkB;oBAAU,mBAAc,GAAd,cAAc,CAAe;oBACxH,iBAAY,GAAZ,YAAY,CAAa;oBAXnC,YAAO,GAAY,KAAK,CAAC;oBACzB,oBAAe,GAAY,KAAK,CAAC;gBAUK,CAAC;gBAEvC,iCAAQ,GAAR;oBAAA,iBAQC;oBAPC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,SAAS;wBACzD,KAAI,CAAC,SAAS,GAAG,SAAS;4BAC1B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACtB,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;gBAED,uCAAc,GAAd;oBAAA,iBAIC;oBAHC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtC,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC;oBACf,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,WAAW,GAAG,IAAI,EAAvB,CAAuB,CAAC,CAAC;gBAC9F,CAAC;gBAED,kCAAS,GAAT;oBAAA,iBAOC;oBANC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;oBAC7C,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,IAAI,CAClC,UAAA,MAAM;wBACJ,KAAI,CAAC,GAAG,GAAG,MAAM;4BACjB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAChC,CAAC,CAAC,CAAC;gBACL,CAAC;gBAED,yCAAgB,GAAhB;oBACI,IAAI,CAAC,eAAe,GAAG;wBACrB,OAAO,EAAC,CAAC;wBACT,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC,EAAE;wBAC7B,IAAI,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO;wBACrB,QAAQ,EAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG;wBAC5B,KAAK,EAAC,KAAK;wBACX,UAAU,EAAC,CAAC;wBACZ,OAAO,EAAC,IAAI,CAAC,SAAS;qBACvB,CAAC;oBACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;oBAEtD,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;wBACrE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;gBACP,CAAC;gBA9DH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,mCAAmC;wBAChD,SAAS,EAAE,CAAC,oCAAgB,EAAE,8BAAa,CAAC;wBAC5C,UAAU,EAAE,CAAC,4CAAoB,CAAC;qBACnC,CAAC;;kCAAA;gBA2DF,qBAAC;YAAD,CAAC,AAzDD,IAyDC;YAzDD,2CAyDC,CAAA","sourcesContent":["import {Component, OnInit} from 'angular2/core';\nimport {Contenido} from './contenido.model';\nimport {ContenidoService} from './contenido.service';\nimport {clasesservice} from './clases.service';\nimport {SesionService} from './sesion.service';\nimport { RouteParams } from 'angular2/router';\nimport {Prod,comentario} from './clases';\nimport {Usuario} from './usuario.model';\nimport {comentarioscomponent} from './comentarios.component';\n\n@Component({\n  selector: 'noticia-detalles',\n  templateUrl: 'app/noticia-detail.component.html',\n  providers: [ContenidoService, clasesservice],\n  directives: [comentarioscomponent]\n})\n\nexport class NoticiaDetails implements OnInit{\n  contenido: Contenido;\n  visible: boolean = false;\n  visible_usuario: boolean = false;\n  producto: Prod;\n  comentarios:comentario[];\n  resp_comentario:comentario;\n  loged:boolean;\n  usr: Usuario;\n  aux_id:number;\n  respuesta:string;\n\n  constructor(private _sesionService: SesionService,private _contentService: ContenidoService, private _clasesService: clasesservice,\n    private _routeParams: RouteParams) {}\n\n  ngOnInit() {\n    let id = +this._routeParams.get('id');\n    this._contentService.getContenidoId(id).subscribe(contenido =>{\n      this.contenido = contenido,\n      this.visible = true;\n    });\n    this.getComentarios();\n    this.getsesion();\n  }\n\n  getComentarios(){\n    let id = +this._routeParams.get('id');\n    this.aux_id=id;\n    this._clasesService.getcomentariosContenido(id).subscribe( list => this.comentarios = list);\n  }\n  \n  getsesion(){\n    this.loged = this._sesionService.getLogged();\n    this._sesionService.getSesion().then(\n      actual => {\n        this.usr = actual,\n        this.visible_usuario = true;\n    });\n  }\n\n  enviarcomentario(){\n      this.resp_comentario = {\n        idjuego:0,\n        idcontenido:this.contenido.id,\n        user:this.usr.usuario,\n        user_img:this.usr.imagen.url,\n        fecha:\"Hoy\",\n        puntuacion:0,\n        mensaje:this.respuesta\n      };\n      this.contenido.comentarios.push(this.resp_comentario);\n\n      this._contentService.actualizarContenido(this.contenido).subscribe(cont =>{\n        console.log(\"Hecho\");\n      });\n  }\n\n}\n"]}